apiVersion: apps/v1
kind: Deployment
metadata:
  name: paid-crawler
  labels:
{{ include "wdwtables.labels" . | indent 4 }}
{{ include "wdwtables.paidCrawler.labels" . | indent 4}}
spec:
  replicas: {{ .Values.paidCrawler.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "wdwtables.name" . }}-paid-crawler
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "wdwtables.name" . }}-paid-crawler
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - env:
            - name: BEGIN_TIME
              value: "{{ .Values.paidCrawler.beginTime }}"
            - name: DEBUG
              value: "{{ .Values.paidCrawler.debug }}"
            - name: END_TIME
              value: "{{ .Values.paidCrawler.endTime }}"
            - name: NUMBER_TO_REQUEST
              value: "{{ .Values.paidCrawler.numberToRequest }}"
            - name: NUM_CLIENTS
              value: "{{ .Values.paidCrawler.numClients }}"
            - name: PROXY_ENABLED
              value: "{{ .Values.paidCrawler.proxyEnabled }}"
            - name: RATE_LIMIT
              value: "{{ .Values.paidCrawler.rateLimit }}"
            - name: REQUEST_TIMEOUT
              value: "{{ .Values.paidCrawler.requestTimeout }}"
            - name: RETRIES
              value: "{{ .Values.paidCrawler.retries }}"
            - name: SEARCH_TYPE
              value: {{ .Values.paidCrawler.searchType }}
            - name: REDIS_DB
              value: "{{ .Values.api.redisDb }}"
            - name: REDIS_HOST
              value: {{ .Values.api.redisAddr }}
            - name: REDIS_PORT
              value: "{{ .Values.api.redisPort }}"
          image: "{{ .Values.paidCrawler.image.registry }}/{{ .Values.paidCrawler.image.repository }}:{{ .Values.paidCrawler.image.tag }}"
          name: paid-crawler
          resources: {}
          livenessProbe:
            httpGet:
              path: /
              port: 8288
            initialDelaySeconds: 5
            periodSeconds: 3
      restartPolicy: Always
status: {}
